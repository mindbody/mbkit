@import '~@mbkit/theme/dist/theme.scss';
@import '~@mbkit/theme/dist/breakpoints.scss';

$transitionTime: 500;

// Targets fill of all SVG elements that have a fill attribute that contains a pound symbol
@mixin svgFill($fillColor) {
    svg g:not([fill~="#"]),
    svg path:not([fill~="#"]),
    svg mask:not([fill~="#"]),
    svg use:not([fill~="#"]) { 
        fill: $fillColor;
    }
}

:export {
    transitionTime: $transitionTime;
}

.toaster {
    box-sizing: border-box;
    display: inline-flex;
    
    width: 100%;
    position: fixed;
    bottom: 0;
    left: 0;

    background: $secondary-base;
    color: $secondary-foreground;

    padding: 16px;
    border-radius: $radius;
    
    font-family: $font-family;
    font-size: $font-spec-7-size;
    
    animation-name: slideIn;
    animation-duration: #{$transitionTime}ms;
    animation-iteration-count: 1;
    animation-direction: normal;

    .icon {
        @include svgFill($secondary-foreground);
        vertical-align: middle;
        margin-right: 8px;
        height: 32px;
    }
    .content {
        padding: 4px;
        color: $secondary-foreground;
        line-height: 1.5;
    }

    @media screen and (min-width: $media-sm) {
        bottom: 16px;
        left: 16px;
        width: auto;
        max-width: 540px;
    }
}

.toasterTopCenter {
    bottom: initial;
    left: 50%;
    top: 0;
    animation-name: slideInTopCenter;

    @media screen and (min-width: $media-sm) {
        max-width: 540px;
        top: 16px;
        transform: translate(-50%, 0);
        width: auto;
    }
}

.defaultColor {
    background: $secondary-base;
    color: $secondary-foreground;
}

.successColor {
    background: $success-base;
    color: $secondary-foreground;
}

.hideToaster {
    animation-name: slideOut;
}

.hideToasterTopCenter {
    animation-name: slideOutTopCenter !important;
}

@keyframes slideIn {
    from {
        transform: translate3d(0, calc(100% + 16px), 0);
    }
    to {
        transform: translate3d(0, 0, 0);
    }
}

@keyframes slideOut {
    from {
        transform: translate3d(0, 0, 0);
    }
    to {
        transform: translate3d(0, calc(100% + 16px), 0);
    }
}

@keyframes slideInTopCenter {
    from {
        transform: translate3d(-50%, -100%, 0);
    }
    to {
        transform: translate3d(-50%, 0, 0);
    }
}

@keyframes slideOutTopCenter {
    from {
        transform: translate3d(-50%, 0, 0);
    }
    to {
        transform: translate3d(-50%, calc(-100% - 16px), 0);
    }
}
